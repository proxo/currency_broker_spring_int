<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:int="http://www.springframework.org/schema/integration"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
             xmlns:oxm="http://www.springframework.org/schema/oxm"
             xmlns:ws="http://www.springframework.org/schema/web-services"
             xmlns:stream="http://www.springframework.org/schema/integration/stream" xmlns:task="http://www.springframework.org/schema/task"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/integration
                  http://www.springframework.org/schema/integration/spring-integration.xsd http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services.xsd http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <ws:interceptors>
        <beans:bean class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"/>
    </ws:interceptors>

    <!-- ws-gateway -->
    <int:channel id="currencyBrokerInput"/>
    <int:channel id="currencyBrokerOutput"/>

    <!-- check account status and response with either validation error or forward for processing -->
    <int:channel id="accountStatusCheckChannel"/>
    <int:channel id="accountNotExistsChannel"/>
    <int:channel id="accountExistsChannel"/>

    <!-- query for exchange rates concurrently -->
    <int:channel id="currencyConverterChannel">
        <int:dispatcher task-executor="taskExecutor"/>
    </int:channel>

    <!-- check if sum of ordered currencies can be bought from account -->
    <int:channel id="currencyTransactionCheckChannel"/>

    <!-- fullfill order -->
    <int:channel id="fulfillOrderChannel" datatype="pl.prxsoft.samples.eai.currency.model.CurrencyBrokerResponseType"/>

    <context:component-scan base-package="pl.prxsoft.samples.eai.currency"/>

    <task:executor id="taskExecutor" pool-size="4-10" queue-capacity="100" rejection-policy="CALLER_RUNS"/>

    <!-- map request -->
    <oxm:jaxb2-marshaller id="marshaller">
        <oxm:class-to-be-bound name="pl.prxsoft.samples.eai.currency.model.CurrenciesType"/>
        <oxm:class-to-be-bound name="pl.prxsoft.samples.eai.currency.model.CurrencyBrokerRequestType"/>
        <oxm:class-to-be-bound name="pl.prxsoft.samples.eai.currency.model.CurrencyBrokerResponseType"/>
        <oxm:class-to-be-bound name="pl.prxsoft.samples.eai.currency.model.CurrencyType"/>
    </oxm:jaxb2-marshaller>

    <int-ws:inbound-gateway
            id="ws-inbound-gateway" request-channel="currencyBrokerInput"
            marshaller="marshaller" unmarshaller="marshaller"
            reply-channel="currencyBrokerOutput"
            />

    <ws:dynamic-wsdl id="currencybroker" portTypeName="CurrencyBrokerService" locationUri="/currencybroker">
        <ws:xsd location="/WEB-INF/currency_broker.xsd"/>
    </ws:dynamic-wsdl>

    <beans:bean id="accountStatusEnricher" class="pl.prxsoft.samples.eai.currency.AccountStatusEnricher"/>
    <beans:bean id="currencyToRequestSummer" class="pl.prxsoft.samples.eai.currency.CurrencyToRequestSummer"/>
    <!-- enrich with account status and group currencies by currencyCode -->
    <int:chain input-channel="currencyBrokerInput" output-channel="accountStatusCheckChannel">
        <int:header-enricher>
                <int:header name="accountAmount" method="checkAccountStatus" ref="accountStatusEnricher"/>
        </int:header-enricher>
        <int:transformer method="sumUpCurrencies" ref="currencyToRequestSummer"/>
    </int:chain>

    <int:router id="accountExistsRouter" input-channel="accountStatusCheckChannel"
                expression="headers.accountAmount &lt; 0 ? 'currencyBrokerOutChannel' : 'accountExistsChannel'" />

    <!-- split currencies to exchange for parallel processing -->
    <int:chain input-channel="accountExistsChannel" output-channel="currencyConverterChannel">
        <int:header-enricher>
            <int:header name="originalRequest" expression="payload"/>
        </int:header-enricher>
        <int:splitter ref="currencyBrokerReqSplitter"/>
    </int:chain>

    <!-- enrich currency request with exchange rate from external WS-->
    <int:enricher input-channel="currencyConverterChannel"
                  output-channel="currencyTransactionLineCheckChannel"
                  request-channel="currencyConverterWSReqChannel">
        <int:property name="exchangeRate" expression="payload"/>
    </int:enricher>

    <int:channel id="stdoutChannel"/>

    <int:channel id="currencyTransactionLineCheckChannel">
        <int:interceptors>
            <int:wire-tap channel="stdoutChannel" />
        </int:interceptors>
    </int:channel>

    <int:chain input-channel="currencyTransactionLineCheckChannel" output-channel="currencyTransactionCheckChannel">
        <int:aggregator />
        <int:transformer ref="transactionSummerTransformer" method="convertCurrenciesRatesToResponse"/>
    </int:chain>

    <!-- if account response is true -->
    <int:router input-channel="currencyTransactionCheckChannel" expression="payload.status ? 'fulfillOrderChannel' : 'currencyBrokerOutput'"/>

    <!-- final provisioning step -->
    <int:service-activator input-channel="fulfillOrderChannel" output-channel="currencyBrokerOutput"
                           ref="orderFulfillService" method="fullfillOrder"/>

    <int:chain input-channel="currencyConverterWSReqChannel">
        <int:header-enricher>
            <int:header name="currencyType" expression="payload"/>
        </int:header-enricher>

        <int:transformer ref="currencyExchangeWsTransformer" method="convertToCurrencyRequest"/>
        <int-ws:header-enricher>
            <int-ws:soap-action value="http://www.webserviceX.NET/ConversionRate"/>
        </int-ws:header-enricher>

        <int-ws:outbound-gateway uri="http://www.webservicex.net/CurrencyConvertor.asmx"/>

        <int:transformer ref="currencyExchangeWsTransformer" method="convertWSResponseToOut"/>
    </int:chain>

    <!-- aggregator and summer -->

   <!-- TODO: add call to WS, sum up costs, verify if account can withdraw sum, withdraw sum and return total -->
   <!-- The response from the service is logged to the console. -->
   <stream:stdout-channel-adapter channel="stdoutChannel"/>

    <!-- account is not present in system - respond with error -->
    <int:channel id="currencyBrokerOutChannel"/>
    <int:chain input-channel="currencyBrokerOutChannel" output-channel="currencyBrokerOutput">
        <int:transformer expression="new pl.prxsoft.samples.eai.currency.model.CurrencyBrokerResponseType(false,'Account number is invalid')"/>
    </int:chain>
</beans:beans>